#ifndef GITSTRARRAY_H
#define GITSTRARRAY_H
// generated from class_header.h
#include <nan.h>
#include <string>

extern "C" {
#include <git2.h>
}

#include "../include/str_array_converter.h"
#include "../include/strarray.h"

using namespace node;
using namespace v8;

class GitStrarray : public ObjectWrap {
  public:

    static Persistent<Function> constructor_template;
    static void InitializeComponent (Handle<v8::Object> target);

    git_strarray *GetValue();
    git_strarray **GetRefValue();
    void ClearValue();

    static Handle<v8::Value> New(void *raw, bool selfFreeing);
    bool selfFreeing;

        

  private:


    GitStrarray(git_strarray *raw, bool selfFreeing);
    ~GitStrarray();
        
    static NAN_METHOD(JSNewFunction);

    static NAN_METHOD(Strings);
    static NAN_METHOD(Count);

    static NAN_METHOD(Copy);

    static NAN_METHOD(Free);
    git_strarray *raw;
};

#endif
