{
  "name": "browserify-incremental",
  "version": "2.0.0",
  "description": "Fast incremental rebuilds for browserify",
  "main": "index.js",
  "bin": {
    "browserifyinc": "./bin/cmd.js"
  },
  "scripts": {
    "test": "tap test"
  },
  "author": {
    "name": "James Friend",
    "email": "james@jsdf.co",
    "url": "http://jsdf.co/"
  },
  "license": "MIT",
  "homepage": "https://github.com/jsdf/browserify-incremental",
  "bugs": {
    "url": "https://github.com/jsdf/browserify-incremental/issues"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jsdf/browserify-incremental.git"
  },
  "dependencies": {
    "JSONStream": "^0.10.0",
    "browserify": "*",
    "browserify-cache-api": "^1.3.0",
    "through2": "^0.6.2",
    "xtend": "^4.0.0"
  },
  "devDependencies": {
    "tap": "^0.4.12"
  },
  "readme": "# browserify-incremental\n\nIncremental rebuild for browserify\n\nUpdate any source file and re-bundle, and only changed files will be parsed, \nso it will build super fast (even with big dependencies like React!).\n\n\n## How is this different from [watchify](https://github.com/substack/watchify)?\n\nbrowserify-incremental can detect changes which occured in between runs, which \nmeans it can be used as part of build systems which are invoked on demand, \nwithout requiring a long lived process. Whereas watchify is slow for the first \nrun upon each startup, browserify-incremental is fast every time after the very \nfirst.\n\n\n# example\n\nUse `browserifyinc` with all the same arguments as `browserify`, with the added \n`--cachefile` argument specifying where to put the cache file:\n\n```\n$ browserifyinc -r react -o output/bundle.js  -v\n556200 bytes written to output/bundle.js (1.38 seconds)\n$ browserifyinc -r react -o output/bundle.js  -v\n556200 bytes written to output/bundle.js (0.13 seconds)\n```\n\nNow if you change some files and rebuild, only the changed files will be parsed\nand the rest will reuse the previous build's cached output.\n\nYou can use `-v`/`--verbose` to get more verbose output to show which files have \nchanged and how long the bundling took:\n\n```\n$ browserifyinc test-module/ -v -o output/bundle.js\nchanged files:\n/Users/jfriend/code/browserify-incremental/example/test-module/index.js\n1000423 bytes written to output/bundle.js (0.18 seconds)\n```\n\nIf you don't specify `--cachefile`, a `browserify-cache.json` file will be \ncreated in the current working directory.\n\n# usage\n\n# CLI\n\n```\nbrowserifyinc --cachefile tmp/browserify-cache.json main.js > output.js\n```\n\nAll the bundle options are the same as the browserify command except for `-v` \nand `--cachefile`.\n\n# API\n\n``` js\nvar browserifyInc = require('browserify-incremental')\n```\n\n## var b = browserifyInc(opts)\n\nCreate a browserify bundle `b` from `opts`.\n\n`b` is exactly like a browserify bundle except that it caches file contents and\ncalling `b.bundle()` extra times past the first time will be much faster \ndue to that caching.\n\nBy default, when used via API, browserify-incremental will only use in-memory \ncaching, however you can pass a `cacheFile` option which will use an on disk\ncache instead (useful for build scripts which run once and exit).\n\nYou can also pass in a browserify instance of your own, and that will be used\ninstead of creating a new one, however when you create your browserify instance \nyou must include the following options:\n\n```js\n{cache: {}, packageCache: {}, fullPaths: true}\n```\n\nFor convenience, these options are available as `browserifyInc.args`, so you can \nuse them like:\n\n```js\nvar browserify = require('browserify')\nvar browserifyInc = require('browserify-incremental')\nvar xtend = require('xtend')\n\nvar b = browserify(xtend(browserifyInc.args, {\n  // your custom opts\n}))\nbrowserifyInc(b {cacheFile: './browserify-cache.json'})\n\nb.bundle().pipe(process.stdout)\n```\n\nThe `cacheFile` opt can be passed to either the browserify or browserify-incremental\nconstructor.\n\n# events\n\n## b.on('bytes', function (bytes) {})\n\nWhen a bundle is generated, this event fires with the number of bytes.\n\n## b.on('time', function (time) {})\n\nWhen a bundle is generated, this event fires with the time it took to create the\nbundle in milliseconds.\n\n## b.on('log', function (msg) {})\n\nThis event fires to with messages of the form:\n\n```\nX bytes written (Y seconds)\n```\n\nwith the number of bytes in the bundle X and the time in seconds Y.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\n$ npm install -g browserify-incremental\n```\n\nto get the browserifyinc command and:\n\n```\n$ npm install --save browserify-incremental browserify\n```\n\nto get just the library.\n\n## IMPORTANT\n\nYou should install a specific version of browserify alongside \nbrowserify-incremental (eg. with `--save`) to ensure that your browserify version \nis locked by package.json, because browserify-incremental doesn't specify an \nexact browserify version.\n\n# license\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "browserify-incremental@2.0.0",
  "_shasum": "406e6f34d48aa1a4eab70eee5da49c613ca41877",
  "_from": "browserify-incremental@^2.0.0",
  "_resolved": "https://registry.npmjs.org/browserify-incremental/-/browserify-incremental-2.0.0.tgz"
}
